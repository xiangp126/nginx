# user  nobody;
daemon off;
worker_processes  1;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    # Define the server block for HTTPS
    server {
        listen       443 ssl http2;
        server_name  localhost;

        # SSL configuration
        ssl_certificate     /etc/ssl/certs/nginx.crt;    # Path to your SSL certificate
        ssl_certificate_key /etc/ssl/private/nginx.key;  # Path to your SSL private key

        # Disable TLS 1.0 and TLS 1.1 (optional, but recommended)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;

        # Enable SSL session tickets
        ssl_session_tickets on;

        # Enable HTTP/2
        http2_max_concurrent_streams 64;

        location / {
            root   html;
            index  index.html index.htm;
        }
    }

    # Define the server block for redirecting HTTP to HTTPS
    # server {
    #     listen 80;
    #     server_name example.com;  # Your domain name

    #     # Redirect HTTP to HTTPS
    #     return 301 https://$host$request_uri;
    # }
}
